#summary Tutorial on helper functions

= Introduction =

The software comes with a series of helper function to facilitate its use. These range to built-in function generators i.e. a *hill* function or a random *proportions* generator, to easy parameter parsing and data collection routines. The '`helper.py` module contains these function, below we document the most important ones.

= Parameter Input =

It is a very common use case to test the system with different sets of initial conditions or function parameters. Maintaining all these state can be a chore. The `Parameter()` class and its related helpers were created to alleviate problems relating to keeping track of all the states. These helper operate on comma separated files that may be created with Excel. The files should be in the following format. 

http://booleannet.googlecode.com/svn/webdata/excel-data.png 

The first line contains the node ids, in this case `SAM1`, `BLK2`, `Ca+2`, and `Call`. Note that the node ids need not be unique. The second line contains the type of the value for the column. In this case `init`, `hill`, `level` and `status`. Save this excel sheet into a *comma-separated format* then load it with:

{{{
from boolean import helper

lines = helper.read_parameters('parameter-data.csv')
}}}

The `lines` object returned by the helper method is a list that contains Parameter()